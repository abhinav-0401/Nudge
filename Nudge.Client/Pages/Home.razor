@page "/"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@inject ApiService Api

<PageTitle>Nudge - A Simple API Manager</PageTitle>

<div class="container mt-4">
    <h2 class="mb-4">API Request Manager</h2>

    <!-- Create New Request Form -->
    <NewRequest />

    <!-- Requests List -->
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">Saved Requests</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Method</th>
                            <th>URL</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (_requests is not null)
                        {
                            @foreach (var req in _requests)
                            { 
                                <tr>
                                    <td><span class="badge bg-warning text-dark">@req.Method</span></td>
                                    <td>@req.Url</td>
                                    <td>
                                        <button class="btn btn-success btn-sm me-2">Execute</button>
                                        <button
                                            class="btn btn-danger btn-sm"
                                            @onclick="(MouseEventArgs _) => DeleteRequestHandler(req.RequestId)"
                                        >
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code
{
    private List<Request>? _requests;

    protected override async Task OnInitializedAsync()
    {
        await GetAllRequests();
    }

    private async Task GetAllRequests()
    {
        _requests = await Api.GetAllRequestsAsync();
    }

    private async Task DeleteRequestHandler(int id)
    {
        await Api.DeleteRequestAsync(id);
        await GetAllRequests();
    }
}